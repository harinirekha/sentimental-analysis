# -*- coding: utf-8 -*-
"""Sentimental Analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AGQEnVKD99Iy_h79ye51ARlcEHT93YKI
"""

import nltk
from nltk.corpus import stopwords
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.svm import SVC
import string

nltk.download('punkt')
nltk.download('stopwords')

data = [("I love this restaurant!", "positive"),
        ("The food was terrible.", "negative"),
        ("The service was okay.", "neutral"),
        ("Great experience overall.", "positive"),
        ("Average food was served.","neutral")]

stop_words = set(stopwords.words('english'))

def preprocess_text(text):
    words = nltk.word_tokenize(text.lower())
    filtered_words = [word for word in words if word.isalnum() and word not in stop_words and word not in string.punctuation]
    return ' '.join(filtered_words)

X = [preprocess_text(text) for text, _ in data]
y = [sentiment for _, sentiment in data]

vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(X)

svm_classifier = SVC(kernel='linear')
svm_classifier.fit(X, y)

def classify_user_input(input_text):
    preprocessed_input = preprocess_text(input_text)
    input_vectorized = vectorizer.transform([preprocessed_input])
    predicted_sentiment = svm_classifier.predict(input_vectorized)[0]
    return predicted_sentiment

user_input = input("Enter your text: ")
predicted_sentiment = classify_user_input(user_input)
print("Predicted sentiment:", predicted_sentiment)